rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(magrittr)
#library(directlabels)
library(RWiener)
library(knitr)
library(bootstrap)
library(gridExtra)
library(effsize)
library(lme4)
rm(list = ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
library(bootstrap)
library(lme4)
library(knitr)
## number of unique subs
n.unique <- function (x) {
length(unique(x))
}
## for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x), 1000, theta, x)$thetastar, .025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x), 1000, theta, x)$thetastar, .975)}
plot.style <- theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black",size = .5),
axis.ticks = element_line(size = .5),
axis.title.x = element_text(vjust = -.5),
axis.title.y = element_text(angle = 90,vjust = 0.25))
setwd("~/Documents/Work/Publications/Writing/negpad/analyses")
d.exp2 <- read.csv("data/exp2.csv")
d.exp2$agegroup <- factor(d.exp2$agegroup)
d.exp2$sent.type <- factor(d.exp2$sent.type,
levels = c("positive", "negative"),
labels = c("Positive", "Negative"))
d.exp2$condition <- factor(d.exp2$condition,
labels = c("None", "Target"))
d.exp2$resp2 <- 2
d.exp2[d.exp2$resp > 3,]$resp2 <- 3
d.exp2[d.exp2$resp < 3,]$resp2 <- 1
d.exp2$resp2 <- factor(d.exp2$resp2)
#Reject children who didn't complete at least 8 trials
ntrials <- d.exp2 %>%
group_by(subid) %>%
summarize(ntrials = n()) %>%
filter(ntrials < 8)
for (i in ntrials$subid) {
d.exp2 <- filter(d.exp2, subid != i)
}
reject <- d.exp2 %>%
filter(sent.type == "Positive") %>% #Only look at positive sentences
group_by(subid) %>%
mutate(total = n()) %>% #get total # of positive sentences child saw
group_by(subid, condition, truth, total, resp2) %>%
filter((truth == "True" & resp2 == 3) | (truth == "False" & resp2 == 1)) %>% #Get # "good" for true pos and "bad" for false pos
summarize(counts = n()) %>%
group_by(subid, condition, total) %>%
summarize(counts = sum(counts)) %>% #total # "correct" responses
mutate(prop = counts/total) %>% #proportion correct
filter(prop < .6) #reject kids who got < .6 "correct" (this allows for 2/6 "mistakes")
for (i in reject$subid) {
d.exp2 <- filter(d.exp2, subid != i)
}
scaleUse <- aggregate(resp2 ~ subid, d.exp2, n.unique)
table(scaleUse$resp2) #Are any resp2 = 1
tn_responses <- d.exp2 %>%
filter(sent.type == "Negative" & truth == "True") %>%
group_by(subid) %>%
mutate(total = n()) %>%
group_by(subid, condition, total, resp2) %>%
summarize(counts = n()) %>%
mutate(prop = counts/total)
category <- dcast(tn_responses, subid + condition ~ resp2)
names(category) <- c("subid","condition","bad","neutral","good")
category[is.na(category)] <- 0
category$type <- "other"
#category[category$neutral > .6,]$type <- "tn_neutral"
category[category$bad > .6,]$type <- "tn_bad"
category[category$good > .6,]$type <- "tn_good"
cat_counts <- category %>%
group_by(condition, type) %>%
summarise(counts = n())
cat_counts$type <- factor(cat_counts$type, levels = c("tn_bad","tn_good","other"), labels = c("True Negatives = Bad", "True Negatives = Good", "Inconsistent/Other"))
ggplot(data = cat_counts, aes(x = condition, y = counts, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_hue("Response Type") +
ylab("Count") + xlab("Context Condition") +
plot.style
```
ms <- d.exp2 %>%
group_by(subid, condition, sent.type, truth) %>%
summarise(subm = mean(resp)) %>%
group_by(condition, sent.type, truth) %>%
summarise(m = mean(subm),
cih = ci.high(subm),
cil = ci.low(subm))
ms$truth <- factor(ms$truth, levels=c("True","False"))
kable(ms, digits = 2)
ggplot(data = subset(ms),
aes(x = condition, y = m, fill =  sent.type)) +
facet_grid(. ~ truth) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = cil, ymax = cih),
position = position_dodge(.9), width = 0) +
scale_fill_grey("") +
xlab("Context") + ylab("Response") +
scale_y_continuous(limits = c(0, 5), breaks = seq(1,5,1)) +
plot.style
ggplot(data = subset(ms, sent.type == "Negative"),
aes(x = truth, y = m, fill = condition)) +
#facet_grid(. ~ truth) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = cil, ymax = cih),
position = position_dodge(.9), width = 0) +
scale_fill_grey("") +
xlab("Context") + ylab("Response") +
scale_y_continuous(limits = c(0, 5), breaks = seq(1,5,1)) +
plot.style
truenegs <- filter(ms, truth == "True" & sent.type ==  "Negative")
#make df for histogram (for formatting reasons)
hist_data <- d.exp2 %>%
filter(truth == "True" & sent.type == "Negative") %>%
group_by(condition, resp) %>%
summarise(count = n())
ggplot(data = hist_data, aes(y = count, x = resp,
fill = condition)) +
geom_bar(width = .5, position = position_dodge(.6), stat = "identity") +
geom_point(data = truenegs, aes(x = m, y = c(44, 46), color = condition)) +
geom_segment(data = truenegs, aes(x = cil, xend = cih, y = c(44, 46), yend = c(44, 46), color = condition)) +
scale_fill_grey("Condition") + scale_color_grey("Condition") +
xlab("Response") + ylab("Count") +
plot.style
#maximal model (truth * condition | item) does not converge
#This is the maximal model that converges
model.noage <- lmer(resp ~ condition * truth
+ (truth|subid)
+ (truth|item),
data = filter(d.exp2, sent.type ==  "Negative"))
summary(model.noage)
contrasts(d.exp2$condition)
contrasts(d.exp2$condition) <- rbind(.5, -.5)
contrasts(d.exp2$condition)
contrasts(d.exp2$truth) <- rbind(.5, -.5)
contrasts(d.exp2$truth)
#maximal model (truth * condition | item) does not converge
#This is the maximal model that converges
model.noage <- lmer(resp ~ condition * truth
+ (truth|subid)
+ (truth|item),
data = filter(d.exp2, sent.type ==  "Negative"))
summary(model.noage)
rm(list = ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
library(bootstrap)
library(lme4)
library(knitr)
setwd("~/Documents/Work/Publications/Writing/negpad/analyses")
## number of unique subs
n.unique <- function (x) {
length(unique(x))
}
## for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x), 1000, theta, x)$thetastar, .025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x), 1000, theta, x)$thetastar, .975)}
plot.style <- theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black",size = .5),
axis.ticks = element_line(size = .5),
axis.title.x = element_text(vjust = -.5),
axis.title.y = element_text(angle = 90,vjust = 0.25))
d.exp1 <- read.csv("data/exp1.csv")
d.exp1$condition <- factor(d.exp1$condition,
levels = c("noContext", "context"),
labels = c("None", "Target"))
d.exp1$sentence.type <- factor(d.exp1$sentence.type,
levels = c("positive", "negative"),
labels = c("Positive" , "Negative"))
d.exp1$neg.concept <- factor(d.exp1$neg.concept,
levels = c("something", "nothing"),
labels = c("Alternative",  "Nonexistence"))
d.exp1$neg.syntax <- factor(d.exp1$neg.syntax,
levels = c("", "has no", "doesn't have"),
labels = c("", "has no X", "doesn't have X"))
qplot(d.exp1$rating, geom = "histogram") + plot.style
ms <- d.exp1 %>%
group_by(subid, condition, sentence.type, truth.value, neg.concept, neg.syntax) %>%
summarise(subm = mean(rating)) %>%
group_by(condition, sentence.type, truth.value, neg.concept, neg.syntax) %>%
summarise(rating = mean(subm),
high = ci.high(subm),
low = ci.low(subm))
ms$truth.value <- factor(ms$truth.value, levels=c(TRUE, FALSE), labels=c("True","False"))
kable(ms, digits = 2)
ggplot(data = ms, aes(x = sentence.type, y = rating,
color = neg.concept, shape = neg.syntax)) +
geom_point(stat = "identity", position = position_dodge(width = .5)) +
facet_grid(truth.value ~ condition) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .5)) +
plot.style
ggplot(data = ms, aes(x = neg.concept, y = rating,
color = condition, shape = sentence.type)) +
geom_point(stat = "identity", position = position_dodge(width = .5)) +
facet_grid(truth.value ~ neg.syntax) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .5)) +
plot.style
ggplot(data = ms, aes(x = sentence.type, y = rating,
color = neg.concept, shape = neg.syntax)) +
geom_point(stat = "identity", position = position_dodge(width = .5)) +
facet_grid(truth.value ~ condition) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .5)) +
plot.style
d.exp1.neg <- filter(d.exp1, sentence.type == "Negative")
ms <- d.exp1.neg %>%
group_by(subid, condition, truth.value, neg.concept, neg.syntax) %>%
summarise(subm = mean(rating)) %>%
group_by(condition, truth.value, neg.concept, neg.syntax) %>%
summarise(rating = mean(subm),
high = ci.high(subm),
low = ci.low(subm))
ms$truth.value <- factor(ms$truth.value, levels=c(TRUE, FALSE), labels=c("True","False"))
ggplot(data = ms, aes(x = condition, y = rating, fill = neg.concept)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(truth.value ~ neg.syntax) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
ggplot(data = ms, aes(x = neg.concept, y = rating, fill = condition)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(truth.value ~ neg.syntax) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
d.exp1.trueneg <- filter(d.exp1, sentence.type ==  "Negative" & truth.value == TRUE)
ms <- d.exp1.trueneg %>%
group_by(subid, condition, neg.concept, neg.syntax) %>%
summarise(subm = mean(rating)) %>%
group_by(condition, neg.concept, neg.syntax) %>%
summarise(rating = mean(subm),
high = ci.high(subm),
low = ci.low(subm))
ggplot(data = ms, aes(x = neg.concept, y = rating, fill = condition)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ neg.syntax) +
geom_errorbar(aes(ymin = low, ymax = high), width = 0,
position = position_dodge(width = .9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
ms <- d.exp1 %>%
group_by(subid, condition, sentence.type, neg.syntax, truth.value, neg.concept) %>%
summarise(subm = mean(rating)) %>%
group_by(condition, sentence.type, truth.value, neg.concept, neg.syntax) %>%
summarise(rating = mean(subm),
high = ci.high(subm),
low = ci.low(subm))
ms$truth.value <- factor(ms$truth.value, levels=c(TRUE, FALSE), labels=c("True","False"))
ms
ms <- d.exp1 %>%
group_by(subid, condition, sentence.type, neg.syntax, truth.value, neg.concept) %>%
summarise(subm = mean(rating)) %>%
group_by(condition, sentence.type, neg.syntax, truth.value, neg.concept) %>%
summarise(rating = mean(subm),
high = ci.high(subm),
low = ci.low(subm))
ms$truth.value <- factor(ms$truth.value, levels=c(TRUE, FALSE), labels=c("True","False"))
ms
d.exp2 <- read.csv("data/exp2.csv")
d.exp2$agegroup <- factor(d.exp2$agegroup)
d.exp2$sent.type <- factor(d.exp2$sent.type,
levels = c("positive", "negative"),
labels = c("Positive", "Negative"))
d.exp2$condition <- factor(d.exp2$condition,
labels = c("None", "Target"))
d.exp2$resp2 <- 2
d.exp2[d.exp2$resp > 3,]$resp2 <- 3
d.exp2[d.exp2$resp < 3,]$resp2 <- 1
d.exp2$resp2 <- factor(d.exp2$resp2)
#Reject children who didn't complete at least 8 trials
ntrials <- d.exp2 %>%
group_by(subid) %>%
summarize(ntrials = n()) %>%
filter(ntrials < 8)
for (i in ntrials$subid) {
d.exp2 <- filter(d.exp2, subid != i)
}
reject <- d.exp2 %>%
filter(sent.type == "Positive") %>% #Only look at positive sentences
group_by(subid) %>%
mutate(total = n()) %>% #get total # of positive sentences child saw
group_by(subid, condition, truth, total, resp2) %>%
filter((truth == "True" & resp2 == 3) | (truth == "False" & resp2 == 1)) %>% #Get # "good" for true pos and "bad" for false pos
summarize(counts = n()) %>%
group_by(subid, condition, total) %>%
summarize(counts = sum(counts)) %>% #total # "correct" responses
mutate(prop = counts/total) %>% #proportion correct
filter(prop < .6) #reject kids who got < .6 "correct" (this allows for 2/6 "mistakes")
for (i in reject$subid) {
d.exp2 <- filter(d.exp2, subid != i)
}
scaleUse <- aggregate(resp2 ~ subid, d.exp2, n.unique)
table(scaleUse$resp2) #Are any resp2 = 1
tn_responses <- d.exp2 %>%
filter(sent.type == "Negative" & truth == "True") %>%
group_by(subid) %>%
mutate(total = n()) %>%
group_by(subid, condition, total, resp2) %>%
summarize(counts = n()) %>%
mutate(prop = counts/total)
category <- dcast(tn_responses, subid + condition ~ resp2)
names(category) <- c("subid","condition","bad","neutral","good")
category[is.na(category)] <- 0
category$type <- "other"
#category[category$neutral > .6,]$type <- "tn_neutral"
category[category$bad > .6,]$type <- "tn_bad"
category[category$good > .6,]$type <- "tn_good"
cat_counts <- category %>%
group_by(condition, type) %>%
summarise(counts = n())
cat_counts$type <- factor(cat_counts$type, levels = c("tn_bad","tn_good","other"), labels = c("True Negatives = Bad", "True Negatives = Good", "Inconsistent/Other"))
ggplot(data = cat_counts, aes(x = condition, y = counts, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_hue("Response Type") +
ylab("Count") + xlab("Context Condition") +
plot.style
ms <- d.exp2 %>%
group_by(subid, condition, sent.type, truth) %>%
summarise(subm = mean(resp)) %>%
group_by(condition, sent.type, truth) %>%
summarise(m = mean(subm),
cih = ci.high(subm),
cil = ci.low(subm))
ms$truth <- factor(ms$truth, levels=c("True","False"))
kable(ms, digits = 2)
ggplot(data = subset(ms),
aes(x = condition, y = m, fill =  sent.type)) +
facet_grid(. ~ truth) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = cil, ymax = cih),
position = position_dodge(.9), width = 0) +
scale_fill_grey("") +
xlab("Context") + ylab("Response") +
scale_y_continuous(limits = c(0, 5), breaks = seq(1,5,1)) +
plot.style
ggplot(data = subset(ms, sent.type == "Negative"),
aes(x = truth, y = m, fill = condition)) +
#facet_grid(. ~ truth) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = cil, ymax = cih),
position = position_dodge(.9), width = 0) +
scale_fill_grey("") +
xlab("Context") + ylab("Response") +
scale_y_continuous(limits = c(0, 5), breaks = seq(1,5,1)) +
plot.style
truenegs <- filter(ms, truth == "True" & sent.type ==  "Negative")
#make df for histogram (for formatting reasons)
hist_data <- d.exp2 %>%
filter(truth == "True" & sent.type == "Negative") %>%
group_by(condition, resp) %>%
summarise(count = n())
ggplot(data = hist_data, aes(y = count, x = resp,
fill = condition)) +
geom_bar(width = .5, position = position_dodge(.6), stat = "identity") +
geom_point(data = truenegs, aes(x = m, y = c(44, 46), color = condition)) +
geom_segment(data = truenegs, aes(x = cil, xend = cih, y = c(44, 46), yend = c(44, 46), color = condition)) +
scale_fill_grey("Condition") + scale_color_grey("Condition") +
xlab("Response") + ylab("Count") +
plot.style
setwd("~/Documents/Work/Publications/Writing/negatron/analyses")
```{r libs}
library(dplyr)
library(ggplot2)
library(lme4)
library(bootstrap)
library(grid)
library(knitr)
## number of unique subs
n.unique <- function (x) {
length(unique(x))
}
#for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
#Plot style
plot.style <- plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
##Load in speaker data
d.speakers <- read.csv("../data/speakers.csv")
d.speakers$subid <- as.factor(d.speakers$subid)
d.listeners <- read.csv("../long_data/long_data_comprehension.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
d.listeners <- read.csv("../data/listeners_long.csv")
setwd("~/Documents/Work/Publications/Writing/negatron/analyses")
d.listeners <- read.csv("../data/listeners_long.csv")
d.listeners <- read.csv("../data/listeners_long.csv")
d.listeners <- read.csv("./data/listeners_long.csv")
head(d.listeners)
table(d$listeners$language)
table(d.listeners$language)
#remove participants under 18
table(d.listeners$age)
d.listeners <- d.listeners[d.listeners$age !=17,]
#remove participants who don't list english as native language
table(d.listeners$language)
d.listeners <- d.listeners[d.listeners$language != "Arabic",]
d.listeners <- d.listeners[d.listeners$language != "Chinese",]
d.listeners <- d.listeners[d.listeners$language != "Korean",]
d.listeners <- d.listeners[d.listeners$language != "Spanish",]
d.listeners <- d.listeners[d.listeners$language != "Tagalog",]
d.listeners <- d.listeners[d.listeners$language != "Urdu",]
d.listeners <- d.listeners[d.listeners$language != "French",]
table(d.listeners$language)
table(d.listeners$age)
write.csv(d.listeners, "./data/listeners_long.csv")
setwd("~/Documents/Work/Research/Negation/Negatron/negatron_v21/analyses")
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners <- read.csv("../data/listeners_long.csv")
d.listeners <- read.csv("./data/listeners_long.csv")
d.speakers <- read.csv("./data/speakers_long.csv")
setwd("~/Documents/Work/Publications/Writing/negatron/analyses")
d.speakers <- read.csv("./data/speakers_long.csv")
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
table(d.listeners$langauge)
table(d.listeners$language)
table(d.listeners$age)
propcorrect <- aggregate(correct~subid, data=d.listeners, mean)
propcorrect
head(d.listener)
head(d.listeners)
acc <- d.listeners %>%
group_by(response, text.condition) %>%
summarize(mean = mean(rt))
kable(acc, digits = 2)
##Load in listener data
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
d.listeners$text.condition <- factor(d.listeners$text.condition,levels=c("positive","negative"), labels=c("Positive","Negative"))
d.listeners$response <- factor(d.listeners$response,levels=c("TRUE","FALSE"))
acc <- d.listeners %>%
group_by(response, text.condition) %>%
summarize(mean = mean(correct))
acc
##Load in listener data
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
acc <- d.listeners %>%
group_by(response, text.condition) %>%
summarize(mean = mean(correct))
acc
##Load in listener data
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
head(d.listeners)
1 - TRUE
1 - FALSE
as.numeric(TRUE)
as.numeric(FALSE)
d.listeners$truth.value <- as.numeric(d.listeners$response)
d.listeners[correct == 0,]$truth.value <- 1 - as.numeric(d.listeners$response)
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
d.listeners$truth.value <- as.numeric(d.listeners$response)
d.listeners[correct == 0,]$truth.value <- 1 - as.numeric(d.listeners$response)
d.listeners[d.listeners$correct == 0,]$truth.value <- 1 - as.numeric(d.listeners$response)
d.listeners$truth.value <- as.numeric(d.listeners$response)
d.listeners[d.listeners$correct == 0,]
d.listeners[d.listeners$correct == 0,]$truth.value
d.listeners[d.listeners$correct == 0,]$truth.value <- 1 - as.numeric(d.listeners[d.listeners$correct == 0,]$response)
d.listeners
head(d.listeners)
d.listeners$truth.value <- as.logical(d.listeners$truth.value)
d.listeners <- read.csv("./data/listeners_long.csv")
d.listeners$subid <- as.factor(d.listeners$subid)
d.listeners$truth.value <- as.numeric(d.listeners$response)
d.listeners[d.listeners$correct == 0,]$truth.value <- 1 - as.numeric(d.listeners[d.listeners$correct == 0,]$response)
d.listeners$truth.value <- as.logical(d.listeners$truth.value)
table(d.listeners$truth.value)
acc <- d.listeners %>%
group_by(truth.value, text.condition) %>%
summarize(mean = mean(correct))
acc
pnorm(1.96)
1-pnorm(1.96)
2*(1-pnorm(1.96))
2*(1-pnorm(.56))
.85*.85
